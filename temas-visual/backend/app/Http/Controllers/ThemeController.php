<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Response;
use Illuminate\Support\Facades\File;
use App\Models\Theme;
use ZipArchive;

class ThemeController extends Controller
{
    public function store(Request $request)
    {
        $themeName = $request->input('name');
        $themeType = $request->input('type');
        $colors = $request->input('colors');

        // Generar el tema y guardarlo en la base de datos
        $themeData = $this->generateTheme($themeName, $themeType, $colors);

        $theme = new Theme([
            'name' => $themeName,
            'type' => $themeType,
            'theme_data' => json_encode($themeData)
        ]);

        $theme->save();

        // Asegurarse de que el directorio exista
        $themeDirectory = storage_path('app/themes/' . $themeName);
        if (!File::exists($themeDirectory)) {
            File::makeDirectory($themeDirectory, 0755, true);
        }

        // Crear el archivo JSON del tema
        $themeJsonPath = $themeDirectory . '/' . $themeName . '-theme.json';
        file_put_contents($themeJsonPath, json_encode($themeData, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));

        // Crear el archivo package.json para el VSIX
        $packageJsonPath = $themeDirectory . '/package.json';
        $packageJsonContent = [
            'name' => strtolower(str_replace(' ', '-', $themeName)),
            'displayName' => $themeName,
            'description' => 'A custom theme generated by your app',
            'version' => '1.0.0',
            'publisher' => 'your-name',
            'engines' => [
                'vscode' => '^1.0.0'
            ],
            'contributes' => [
                'themes' => [
                    [
                        'label' => $themeName,
                        'uiTheme' => $themeType === 'dark' ? 'vs-dark' : 'vs-light',
                        'path' => './' . $themeName . '-theme.json'
                    ]
                ]
            ]
        ];
        file_put_contents($packageJsonPath, json_encode($packageJsonContent, JSON_PRETTY_PRINT | JSON_UNESCAPED_SLASHES));

        // Crear el archivo VSIX usando ZipArchive
        $vsixPath = storage_path('app/themes/' . $themeName . '-theme.vsix');
        $zip = new ZipArchive;
        if ($zip->open($vsixPath, ZipArchive::CREATE) === TRUE) {
            // Agregar archivos en el directorio extension
            $zip->addFile($packageJsonPath, 'extension/package.json');
            $zip->addFile($themeJsonPath, 'extension/' . $themeName . '-theme.json');
            $zip->close();
        } else {
            throw new \Exception("Error al crear el archivo VSIX.");
        }

        // Devolver la respuesta
        return Response::download($vsixPath, $themeName . '-theme.vsix');
    }

    private function generateTheme($name, $type, $colors)
    {
        // Mapa de conversión de variables
        $variableMap = [
            '--editor-background' => 'editor.background',
            '--editor-foreground' => 'editor.foreground',
            '--editor-line-number-foreground' => 'editorLineNumber.foreground',
            '--keyword' => 'keyword',
            '--numbers' => 'constant.numeric',
            '--variables-properties' => 'variable.parameter',
            '--function-methods' => 'function',
            '--classes-constants' => 'type',
            '--string' => 'string',
            '--operators-special' => 'keyword.operator',
            '--comments' => 'comment',
            '--foreground' => 'foreground',
            '--tab-active-background' => 'tab.activeBackground',
            '--tab-inactive-background' => 'tab.inactiveBackground',
            '--tab-border' => 'tab.border',
            '--tab-active-foreground' => 'tab.activeForeground',
            '--tabs-container-background' => 'tabContainer.background',
            '--tab-inactive-foreground' => 'tab.inactiveForeground',
            '--tab-hover-background' => 'tab.hoverBackground',
            '--tab-hover-foreground' => 'tab.hoverForeground',
            '--sidebar-background' => 'sideBar.background',
            '--sidebar-foreground' => 'sideBar.foreground',
            '--side-bar-section-header-foreground' => 'sideBarSectionHeader.foreground',
            '--side-bar-section-header-border' => 'sideBarSectionHeader.border',
            '--list-hover-background' => 'list.hoverBackground',
            '--list-hover-foreground' => 'list.hoverForeground',
            '--status-bar-background' => 'statusBar.background',
            '--status-bar-foreground' => 'statusBar.foreground',
            '--status-bar-background-hover' => 'statusBar.hoverBackground',
            '--status-bar-remote-foreground' => 'statusBar.remoteForeground',
            '--top-bar-background' => 'titleBar.activeBackground',
            '--top-bar-text' => 'titleBar.activeForeground',
            '--title-bar-border' => 'titleBar.border',
        ];

        $themeColors = [];
        $tokenColors = [];
        foreach ($colors as $color) {
            if (isset($variableMap[$color['label']])) {
                if (strpos($variableMap[$color['label']], 'tokenColors.') === 0) {
                    $tokenColors[substr($variableMap[$color['label']], 11)] = $color['value'];
                } else {
                    $themeColors[$variableMap[$color['label']]] = $color['value'];
                }
            }
        }

        // Agregar colores complementarios o faltantes
        $themeColors = array_merge($themeColors, [
            'editorCursor.foreground' => '#aeafad', // Color del cursor
            'editor.selectionBackground' => '#264f78', // Fondo de la selección
            'editor.inactiveSelectionBackground' => '#3a3d41', // Fondo de la selección inactiva
            'editor.lineHighlightBackground' => '#2a2d2e', // Resaltado de línea actual
            'editor.findMatchHighlightBackground' => '#515c6a', // Resaltado de coincidencias
            'sideBarTitle.foreground' => '#bbbbbb', // Color del título de la barra lateral
            'sideBarSectionHeader.background' => '#ffffff', // Fondo del encabezado de la sección de la barra lateral
            'statusBar.noFolderBackground' => '#68217a', // Fondo de la barra de estado sin carpeta
            'activityBar.background' => '#333333', // Fondo de la barra de actividad
            'activityBar.foreground' => '#ffffff', // Color de primer plano de la barra de actividad
            'activityBarBadge.background' => '#007acc', // Fondo de la insignia de la barra de actividad
            'activityBarBadge.foreground' => '#ffffff', // Color de primer plano de la insignia de la barra de actividad
        ]);

        // Estructura básica del tema VSCode
        $theme = [
            'name' => $name,
            'type' => $type,
            'colors' => $themeColors,
            'tokenColors' => [
                [
                    'scope' => 'keyword',
                    'settings' => [
                        'foreground' => $tokenColors['keyword'] ?? '#c678dd'
                    ]
                ],
                [
                    'scope' => 'constant.numeric',
                    'settings' => [
                        'foreground' => $tokenColors['constant.numeric'] ?? '#ff7c00'
                    ]
                ],
                [
                    'scope' => 'variable.parameter',
                    'settings' => [
                        'foreground' => $tokenColors['variable.parameter'] ?? '#ec0113'
                    ]
                ],
                [
                    'scope' => 'function',
                    'settings' => [
                        'foreground' => $tokenColors['function'] ?? '#00ff64'
                    ]
                ],
                [
                    'scope' => 'type',
                    'settings' => [
                        'foreground' => $tokenColors['type'] ?? '#ffa600'
                    ]
                ],
                [
                    'scope' => 'string',
                    'settings' => [
                        'foreground' => $tokenColors['string'] ?? '#0800ff'
                    ]
                ],
                [
                    'scope' => 'keyword.operator',
                    'settings' => [
                        'foreground' => $tokenColors['keyword.operator'] ?? '#14ff91'
                    ]
                ],
                [
                    'scope' => 'comment',
                    'settings' => [
                        'foreground' => $tokenColors['comment'] ?? '#0055ff',
                        'fontStyle' => 'italic'
                    ]
                ],
                // Agrega otros colores de token según sea necesario
            ]
        ];

        return $theme;
    }
}
